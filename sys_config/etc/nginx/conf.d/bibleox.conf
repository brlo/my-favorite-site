upstream backend-rails {
  server 127.0.0.1:3000;
  keepalive 2;
}

###########################
##                       ##
## WWW.BIBLEOX.COM       ##
##                       ##
###########################

server {
  listen 80;
  server_name www.moiprofi.ru;
  return 301 https://moiprofi.ru$request_uri;
}

#######################
##                   ##
## RES.BIBLEOX.COM   ##
##                   ##
#######################

server {
  listen 443 ssl; # default_server;
  server_name res.bibleox.com;

  client_max_body_size 500k;

  add_header 'Access-Control-Allow-Origin' 'https://bibleox.com' always;
  limit_req zone=statip burst=25;

  ssl_certificate /etc/ssl/bibleox.com/bibleox.com_cert.pem;
  ssl_certificate_key /etc/ssl/bibleox.com/bibleox.com_key.pem;

  add_header Strict-Transport-Security "max-age=31536000";
  ssl_prefer_server_ciphers on;
  ssl_ciphers EECDH:+AES256:-3DES:RSA+AES:RSA+3DES:!NULL:!RC4;

  root /projects/bibleox/public;
  #index index.html;
  charset utf-8;

  location / {
  }
}


#######################
##                   ##
## BIBLEOX.COM       ##
##                   ##
#######################

server {
  listen 443 ssl; # default_server;
  server_name bibleox.com;

  client_max_body_size 500k;

  limit_req zone=dynip burst=2;

  ssl_certificate /etc/ssl/bibleox.com/bibleox.com_cert.pem;
  ssl_certificate_key /etc/ssl/bibleox.com/bibleox.com_key.pem;

  add_header Strict-Transport-Security "max-age=31536000";
  ssl_prefer_server_ciphers on;
  ssl_ciphers EECDH:+AES256:-3DES:RSA+AES:RSA+3DES:!NULL:!RC4;

  root /projects/bibleox;
  index index.html;
  charset utf-8;

#  error_page 404 =404 /404/;
  # # раскоментируй, если надо будет включить логи для статики (не забудь повторить для поддоменов)
  # access_log /var/log/nginx/moiprofi_site_access.log client;

  # Перенаправляем запросы с точкой в конце доменного имени на адреса без точек в конце домена
  # domen.com. => domen.com
  if ($http_host ~ "\.$" ){
    #rewrite ^(.*) https://$host$1 permanent; # return is faster
    return 301 https://$host$request_uri;
  }

  # Запрещаем доступ к любым файлам или каталогам, начинающихся с точки
  # /.git
  # /test/.git/test
  location ~ "/\." {
    return 404;
  }

  location = /robots.txt {
    root /projects/bibleox/public;
  }

  # Глобальный запрет на обращение к файлам с extension
  # Это правило сработает в том случае, если запрос не был обработан другими locations
  # типа /res/... /assets/... или отдельными правилами для избранных корневых файлов или расширений
  location ~* "\.[a-z]+$" {
    # если extension приемлемый, то ищем в следующих locations
    #rewrite \.(html|css|js|txt|png|jpe?g|gif|ico|svg|xml|gz|ttf|otf|woff|eot)$ $uri last;
    rewrite ^(/.+)\.html$ https://$host$1 permanent;
    return 404;
  }

  location / {
    #rewrite ^(.*/)index\.html$ https://$host$1 permanent;
    #rewrite ^(/.+)\.html$ https://$host$1 permanent;
    # Перенаправляем запросы без слеша в конце на адреса со слешами
    # domen.com => domen.com/
    rewrite ^([^.]*[^/])$ https://$host$1/ permanent;
    # Но после того, как добавили клиенту в адрес слеш, его надо убрать, чтобы обработка запроса прошла успешно.
    # Таким образом, клиент думает, что работает со слешем в конце, сервер же обрабатывает запросы без него
    rewrite ^/(.*)/$ /$1 break;

#    rewrite ^(.*)$ /masters$1 break;
    # логируем только запросы к динамике
#    access_log /var/log/nginx/moiprofi_site_access.log client;

    proxy_read_timeout 110; # Some requests take more than 30 seconds.
    proxy_connect_timeout 60; # Some requests take more than 30 seconds.
    proxy_redirect     off;

    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   Host              $http_host;
    proxy_set_header   X-Real-IP         $remote_addr;
    proxy_set_header   CLIENT_IP         $remote_addr;
    #proxy_set_header   X-Real-IP         $http_cf_connecting_ip;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;

    proxy_http_version 1.1;
    proxy_set_header Connection "";

    proxy_intercept_errors on;

    proxy_pass http://backend-rails;

#    error_page 404 =404 /404/;
  }

  location = /sitemap.xml.gz {
    root /projects/bibleox/public/sitemaps/;
  }
}

###########################
##                       ##
## REDIRECT TO SSL       ##
##                       ##
###########################

server {
  listen 80;
  server_name bibleox.com
              res.bibleox.com;

  location / {
    return 301 https://$host$request_uri;
  }

}
